<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>View a fullscreen map</title>
    <meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />
    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v0.18.0/mapbox-gl.js'></script>

    //geocoding <script src='https://unpkg.com/mapbox@1.0.0-beta10/dist/mapbox-sdk.min.js'></script>

    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mapbox-gl/0.45.0/mapbox-gl.js"></script>

    <!-- Turf.js cdn turns objects into geojson -->
    <script src='https://npmcdn.com/@turf/turf/turf.min.js'></script>

    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v0.44.2/mapbox-gl.css' rel='stylesheet' />

    <!-- the jquery to save the day -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.2/jquery.min.js"></script>
    <style>
        body { margin:0; padding:0; }
        #map { position:absolute; top:0; bottom:0; width:100%; }
    </style>
<!-- need a leaflet cdn for leaflet functions  -->
<script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <link href='https://api.mapbox.com/mapbox-gl-js/v0.42.0/mapbox-gl.css' rel='stylesheet' />

</head>
<body>
<div id='map'></div>
<div id='instructions'></div>
<div id="searchboxes">
<div id="origin">
    <input id="searchOrig" type="text" placeholder="Origin">
</div> 
<div id="destination">
    <input id="searchDes" type="text" placeholder="Destination">
</div> 
</div> 

<nav id="toggle"></nav>
<script>
mapboxgl.accessToken =  '<%=ENV['mapbox'] %>';
//add geocoding functions here
var client = new MapboxClient('<%=ENV['mapbox'] %>');
//forward geocoding
var geocode = client.geocodeForward('Chester, NJ', function(err, data, res) {
  // data is the geocoding result as parsed JSON
  console.log("data:",data);
  console.log("res:",res);
  // res is the http response, including: status, headers and entity properties
});
geocode;
var map = new mapboxgl.Map({
    container: 'map', // container id
    style: 'mapbox://styles/mapbox/outdoors-v9', //stylesheet location
    center: [-75.206876, 39.950782], // starting position
    zoom: 13 // starting zoom
});

map.addControl(new mapboxgl.FullscreenControl());

//mapbox api request here
    map.on('load', function() {
  getRoute();
});

function getRoute() {
  var start = [-75.171741, 39.9553278];
  var end = [-75.2116433, 39.9497359];
  var directionsRequest = 'https://api.mapbox.com/directions/v5/mapbox/cycling/' + start[0] + ',' + start[1] + ';' + end[0] + ',' + end[1] + '?steps=true&geometries=geojson&access_token=' + mapboxgl.accessToken;
  $.ajax({
    method: 'GET',
    url: directionsRequest,
  }).done(function(data) {
    var route = data.routes[0].geometry;
    map.addLayer({
      id: 'route',
      type: 'line',
      source: {
        type: 'geojson',
        data: {
          type: 'Feature',
          geometry: route
        }
      },
      paint: {
        'line-width': 2
      }
    });
    // this is where the code from the next step will go

    map.addLayer({
  id: 'start',
  type: 'circle',
  source: {
    type: 'geojson',
    data: {
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: start
      }
    }
  }
});
map.addLayer({
  id: 'end',
  type: 'circle',
  source: {
    type: 'geojson',
    data: {
      type: 'Feature',
      geometry: {
        type: 'Point',
        coordinates: end
      }
    }
  }
});
// this is where the JavaScript from the next step will go

var instructions = document.getElementById('instructions');
console.log("instructions:",instructions);
console.log("data:",data)

var steps = data.routes[0].legs[0].steps;
console.log("steps:",steps)
steps.forEach(function(step) {
  instructions.insertAdjacentHTML('beforeend', '<p>' + step.maneuver.instruction + '</p>');
});
  });

}
map.on('load', function() {


// add geojson source to mapbox
var  geojson = 'https://opendata.arcgis.com/datasets/113771ce9fa0424a8b529de9b74b1bc4_0.geojson';
console.log("geojson",geojson); 

// add geojson layer to mapbox
var ltsgeoJSON = $.ajax({
    url: 'https://opendata.arcgis.com/datasets/113771ce9fa0424a8b529de9b74b1bc4_0.geojson'
    }).done(function(response){

        console.log("response",response);
        console.log("response.features[0]",response.features[0]);

            // Add a new source from our GeoJSON data 
             map.addSource("myData1",{
                 type:"geojson",
                 data: response
             });
            //trying to add more sources to speed up render time  
            //map.addSource("myData2", {
            //     type: "geojson",
            //     data: response[1]
            // });

            // Create layer from source
              map.addLayer({
                "id": "bikelayer",
                "type": "line",
                "source": "myData1",
                "layout": {
                    "visibility": "visible",
                    "line-join": "round",
                    "line-cap": "round"
                },
                "paint": {
                    "line-color": "#AEB6BF",
                    "line-width": 1
                }
                
            });
            }) //onload
    // console.log("ltsgeoJSON",ltsgeoJSON);
    }); //lts done
    
    
    
 // });//ends onload function
//toggle bike layer
var toggleableLayerIds = [ 'bikelayer']; // add more layers

for (var i = 0; i < toggleableLayerIds.length; i++) {
    var id = toggleableLayerIds[i];

    var link = document.createElement('a');
    link.href = '#';
    link.className = 'active';
    link.textContent = id;

    link.onclick = function (e) {
        var clickedLayer = this.textContent;
        e.preventDefault();
        e.stopPropagation();

        var visibility = map.getLayoutProperty(clickedLayer, 'visibility');

        if (visibility === 'visible') {
            map.setLayoutProperty(clickedLayer, 'visibility', 'none');
            this.className = '';
        } else {
            this.className = 'active';
            map.setLayoutProperty(clickedLayer, 'visibility', 'visible');
        }
    };

    var layers = document.getElementById('toggle');
    layers.appendChild(link);
}



</script>

<!-- graphhopper -->



 <script src="https://cdn.jsdelivr.net/npm/graphhopper-js-api-client/dist/graphhopper-client.js"></script>
 

<div class="information">
<h1>Safe Ride</h1>
<div class="headsection">
    <p>This site allows bikers to find a safe bicycle route using the DVRPC Bicycle Level of Traffic Stress and Connectivity Analysis</p>
    <p>Based on this network, we will assign you a bike route that not only prioritizes the <a href="">most efficient path</a> but also considers the least stressful riding experience on the existing network.
        <h4>(<a href="">How do we do this?)</a></h4></p>
</div>
</div> <!-- end info div -->


<!-- <div id="mapid"></div>
 --><!-- Add jQuery -->
<!--     <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script> -->
<!-- Leaflet Ajax CDN -->
<script type="text/javascript" src="
  https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js"></script>


</body>
</html>